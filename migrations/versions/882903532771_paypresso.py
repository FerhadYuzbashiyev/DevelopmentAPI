"""Paypresso

Revision ID: 882903532771
Revises: 
Create Date: 2024-09-13 16:31:37.917296

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '882903532771'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('UserRegisterIndividual',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fullname', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('registered_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('UserRegistrationBusiness',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('tax_number', sa.String(), nullable=False),
    sa.Column('registered_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Subscriptions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sub_type', sa.Enum('Basic', 'Standart', 'Premium', name='subscriptiontype'), nullable=False),
    sa.Column('sub_count', sa.Integer(), nullable=False),
    sa.Column('begins_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('expries_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('is_activate', sa.Boolean(), nullable=False),
    sa.Column('user_individual_id', sa.Integer(), nullable=True),
    sa.Column('user_company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_company_id'], ['UserRegistrationBusiness.id'], ),
    sa.ForeignKeyConstraint(['user_individual_id'], ['UserRegisterIndividual.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('UserLogin',
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_exists', sa.Boolean(), nullable=False),
    sa.Column('user_type', sa.Enum('Individual', 'Business', name='usertype'), nullable=False),
    sa.Column('user_individual_id', sa.Integer(), nullable=True),
    sa.Column('user_company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_company_id'], ['UserRegistrationBusiness.id'], ),
    sa.ForeignKeyConstraint(['user_individual_id'], ['UserRegisterIndividual.id'], )
    )
    op.create_table('Vouchers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('voucher_type', sa.Enum('FirstPrice', 'SecondPrice', 'ThirdPrice', name='vouchertype'), nullable=False),
    sa.Column('voucher_count', sa.Integer(), nullable=False),
    sa.Column('is_activate', sa.Boolean(), nullable=False),
    sa.Column('begins_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('expires_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('user_individual_id', sa.Integer(), nullable=True),
    sa.Column('user_company_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_company_id'], ['UserRegistrationBusiness.id'], ),
    sa.ForeignKeyConstraint(['user_individual_id'], ['UserRegisterIndividual.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Vouchers')
    op.drop_table('UserLogin')
    op.drop_table('Subscriptions')
    op.drop_table('UserRegistrationBusiness')
    op.drop_table('UserRegisterIndividual')
    # ### end Alembic commands ###
