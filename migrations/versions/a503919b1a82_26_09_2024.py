"""26.09.2024

Revision ID: a503919b1a82
Revises: 
Create Date: 2024-09-26 11:11:03.477851

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a503919b1a82'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_uuid', sa.UUID(), nullable=True),
    sa.Column('fullname', sa.String(), nullable=True),
    sa.Column('company_name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('tax_number', sa.String(), nullable=True),
    sa.Column('registered_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('user_type', sa.Enum('BUSINESS', 'INDIVIDUAL', name='usertypeenum'), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', 'CONTACT_VERIFICATION', name='userstatusenum'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('company_name'),
    sa.UniqueConstraint('email')
    )
    op.create_table('otp',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('purpose', sa.Enum('USER_REGISTER', name='otppurposeenum'), nullable=False),
    sa.Column('otp_code', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('expiration_time', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subscription',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('subscription_type', sa.String(), nullable=False),
    sa.Column('begins_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('expries_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('is_activate', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', name='statusenum'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('voucher',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('voucher_type', sa.String(), nullable=False),
    sa.Column('voucher_count', sa.Integer(), nullable=False),
    sa.Column('is_activate', sa.Boolean(), nullable=False),
    sa.Column('begins_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('expires_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', name='statusenum'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_subscription',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('begins_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('expires_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', name='statusenum'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('subscription_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['subscription_id'], ['subscription.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_voucher',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('begins_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('expires_at', sa.TIMESTAMP(), nullable=False),
    sa.Column('status', sa.Enum('ACTIVE', 'INACTIVE', name='statusenum'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('voucher_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['voucher_id'], ['voucher.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_voucher')
    op.drop_table('user_subscription')
    op.drop_table('voucher')
    op.drop_table('subscription')
    op.drop_table('otp')
    op.drop_table('user')
    # ### end Alembic commands ###
